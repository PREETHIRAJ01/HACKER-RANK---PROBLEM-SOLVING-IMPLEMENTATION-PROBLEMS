When you select a contiguous block of text in a PDF viewer, 
the selection is highlighted with a blue rectangle. In this PDF viewer, each word is highlighted independently. 
For example:
PDF-highighting.png
In this challenge, you will be given a list of letter heights in the alphabet and a string. Using the letter heights given,
determine the area of the rectangle highlight in  assuming all letters are  1mm wide.
For example, the highlighted word=torn. Assume the heights of the letters are  t=2,o=1,r=1and n=1 . 
The tallest letter is 2 high and there are 4 letters. The hightlighted area will be  so the answer is 2*4*1mm.

Function Description
Complete the designerPdfViewer function in the editor below. 
It should return an integer representing the size of the highlighted area.
designerPdfViewer has the following parameter(s):
h: an array of integers representing the heights of each letter
word: a string

Input Format
The first line contains  space-separated integers describing the respective heights of each consecutive lowercase English letter,
ascii[a-z]. 
The second line contains a single word, consisting of lowercase English alphabetic letters.

Constraints
1<=h[?]<=7 where ?  is an English lowercase letter.
word contains no more than 10 letters.


Output Format
Print a single integer denoting the area in  of highlighted rectangle when the given word is selected. Do not print units of measure.
Sample Input 0
1 3 1 3 1 4 1 3 2 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
abc
Sample Output 0
9
Explanation 0
We are highlighting the word abc:
Letter heights are a=1,b=3  and c=1. The tallest letter, b, is 3mm high. The selection area for this word is 3.1mm.3mm=9mmsquare

CODE:

#include <assert.h>
#include <limits.h>
#include <math.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    int a[26];
    int i,j,max=0;
    for(i=0;i<26;i++)
    {
        scanf("%d",&a[i]); // storing the given values in an array 
    }
    char s[10];
    scanf("%s",s);// storing the string in s character array
   int len=strlen(s); //getting length of the  string
   int value;             // since aplhabets are numbered from 1 - 26 normally (i.e) suppose s[0] is a in abc
                         // string so 'a'-96 --> 97-96 we get the value 1  

    for(i=0;i<l;i++) // running this loop for the entire string 
    { 
        value=s[i]-96;
       for(j=0;j<26;j++) // running this loop for the entire int array a
       {
           if((value-1)==j && a[j]>max) // to check index of s array equals to value-1 and                                                //finding the max 
           {
              max=a[j];
           }
       }
    }
    printf("%d",max*1*len);
}
